generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Fornecedor {
  id                Int            @id @default(autoincrement())
  nome              String
  cnpj              String?
  inscricaoEstadual String?
  Movimentacao      Movimentacao[]
  pedidos          PedidoCompra[]
}

model Produto {
  id            Int             @id @default(autoincrement())
  nome          String
  sku           String
  isKit         Boolean         @default(false)
  pedidosCompra PedidoProduto[]
  estoque       Estoque[]
  Movimentacao  Movimentacao[]
  Saida         Saida[]
  KitProduto    KitProduto[] @relation(name: "ProdutoRelation")
  kits          KitProduto[] @relation(name: "KitRelation")
}

model PedidoCompra {
  id           Int             @id @default(autoincrement())
  fornecedor   Fornecedor      @relation(fields: [fornecedorId], references: [id])
  fornecedorId Int
  produtos     PedidoProduto[]
  comentarios  String?
  status       String
  data         DateTime        @default(now())
  armazemId    Int?
}

model PedidoProduto {
  id         Int          @id @default(autoincrement())
  pedido     PedidoCompra @relation(fields: [pedidoId], references: [id])
  pedidoId   Int
  produto    Produto      @relation(fields: [produtoId], references: [id])
  produtoId  Int
  quantidade Int
  custo      Float
}

model Estoque {
  id            Int     @id @default(autoincrement())
  produto       Produto @relation(fields: [produtoId], references: [id])
  produtoId     Int
  armazem       Armazem @relation(fields: [armazemId], references: [id])
  armazemId     Int
  quantidade    Int
  valorUnitario Float?
}

model Movimentacao {
  id           Int         @id @default(autoincrement())
  produto      Produto     @relation(fields: [produtoId], references: [id])
  produtoId    Int
  tipo         String
  quantidade   Int
  data         DateTime    @default(now())
  valorTotal   Float
  armazemId    Int
  fornecedor   Fornecedor? @relation(fields: [fornecedorId], references: [id])
  fornecedorId Int?
}

model Saida {
  id         Int       @id @default(autoincrement())
  produto    Produto   @relation(fields: [produtoId], references: [id])
  produtoId  Int
  quantidade Int
  data       DateTime  @default(now())
  armazem    Armazem   @relation(fields: [armazemId], references: [id])
  armazemId  Int
}

model Armazem {
  id       Int       @id @default(autoincrement())
  nome     String
  estoque  Estoque[]
  Saida    Saida[]
}

model KitProduto {
  id        Int      @id @default(autoincrement())
  kitId     Int
  produtoId Int
  quantidade Int
  produto   Produto  @relation(fields: [produtoId], references: [id], name: "ProdutoRelation")
  kit       Produto  @relation(fields: [kitId], references: [id], name: "KitRelation")
}